import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.growingio.android'

apply plugin: 'com.growingio.android'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "com.yusion.shanghai.yusion4s"
        minSdkVersion 15
        //noinspection OldTargetApi
        targetSdkVersion 21
        versionCode rootProject.VersionCode
        versionName "${rootProject.VersionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi"
        }

        multiDexEnabled true

        buildConfigField("boolean", "forAppium", rootProject.forAppium.toString())
        buildConfigField("boolean", "isOnline", rootProject.isOnline.toString())

        def pgyer_appid = "2234913a0c85f5dc0e60faefe41c96e0"//红米手机图标不变
        def app_icon = "@mipmap/test_ic_launcher"
        if (isOnline) {
            pgyer_appid = "a455421518edcbc4d3784f2b855b0691"
            app_icon = "@mipmap/ic_launcher"
        }
        manifestPlaceholders = ["PGYER_APPID": pgyer_appid, APP_ICON: app_icon]

        resValue("string", "growingio_project_id", "8892821e0de2f687")
        resValue("string", "growingio_url_scheme", "growing.eef54f1a6e5f2268")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets.main {
        assets.srcDirs = ['assets']
        jniLibs.srcDirs = ['libs']//指定jniLibs文件夹路径
        jni.srcDirs = []//不编译jni
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            String environment = "alpha"
            if (isOnline) environment = "product"
            //projectDir是app目录
            String prefix = ""
            if (forAppium) prefix = prefix + "appium_"
            output.outputFile = new File(projectDir.getAbsolutePath() + "/keystore/apks", prefix + environment + "-yusion4s-" + defaultConfig.versionName + "-" + buildTime() + ".apk")
        }
    }
}

static def buildTime() {
    def df = new SimpleDateFormat("MMdd")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:multidex:1.0.2'
        force 'com.google.code.findbugs:jsr305:3.0.2'

    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile(name: 'AliyunSdk-RC', ext: 'aar')
//    compile files('libs/jcore-android-1.1.6.jar')
//    compile files('libs/jpush-android-3.0.8.jar')
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile 'com.github.bumptech.glide:compiler:4.0.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:4.0.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.hackware1993:MagicIndicator:1.5.0'
    compile 'com.chanven.lib:cptr:1.1.0'
    compile 'com.github.ybq:Android-SpinKit:1.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'io.sentry:sentry-android:1.5.4'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.umeng.analytics:analytics:6.1.2'
    compile 'com.instabug.library:instabug:4.2.10'
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.amap.api:location:3.6.1'
    compile 'com.shizhefei:LargeImageView:1.0.9'
    testCompile 'junit:junit:4.12'

    compile "io.reactivex.rxjava2:rxjava:2.1.6"
    compile 'com.growingio.android:vds-android-agent:1.1.1@aar'
    compile project(path: ':PickerLib')
    compile project(path: ':photoLibrary')

    compile 'com.github.promeg:tinypinyin:1.0.0'
}

class BuildTimeListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private times = []

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        times.add([ms, task.path])
        //task.project.logger.warn "${task.path} spend ${ms}ms"
    }

    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task spend time:"
        for (time in times) {
            if (time[0] >= 50) {
                printf "%7sms  %s\n", time
            }
        }
    }
}

project.gradle.addListener(new BuildTimeListener())

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--set-max-idx-number=48000'
        dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
    }
}